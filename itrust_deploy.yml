---
- hosts: itrust
  gather_facts: no

  vars:
    home: /home/ubuntu

  tasks:

  - name: get the admin password from vault
    include_vars:
      file: /var/lib/jenkins/password.yml
      name: vault

  - name: create development directory
    file:
      path: "{{ home }}/development"
      state: directory
      mode: 0755

  - name: Update all packages
    apt:
      update_cache: yes
      upgrade: dist
    become: yes

  - name: install jdk and jre
    apt:
      # name: openjdk-8-jre-headless
      name: openjdk-8-jdk
      state: present
    become: yes

  - name: set JAVA_HOME
    shell: export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/

  - name: check if tomcat is already installed
    stat:
      path: "{{ home }}/development/apache-tomcat-9.0.0.M26"
    register: tomcat

  - name: download tomcat 9
    get_url:
      url: https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.0.M26/bin/apache-tomcat-9.0.0.M26.tar.gz
      dest: "{{ home }}/development"
    when: tomcat.stat.exists == False

  - name: extract tomcat 9
    unarchive:
      src: "{{ home }}/development/apache-tomcat-9.0.0.M26.tar.gz"
      dest: "{{ home }}/development/"
      remote_src: yes
    when: tomcat.stat.exists == False

  - name: install mysql server and client, and maven
    apt:
      name: "{{ item }}"
    become: yes
    become_user: root
    with_items:
      - mysql-server
      - mysql-client
      - libmysql-java
      - maven

  # - name: install eclipse
  #   apt:
  #     name: eclipse
  #   become: yes
  #   become_user: root

  - name: change default port on tomcat 9
    replace:
      path: "{{ home }}/development/apache-tomcat-9.0.0.M26/conf/server.xml"
      regexp: '<Connector port="8080" protocol="HTTP/1.1"'
      replace: '<Connector port="9090" protocol="HTTP/1.1"'

  - name: start tomcat server
    command: sh "{{ home }}/development/apache-tomcat-9.0.0.M26/bin/startup.sh"
    register: start_tomcat
    failed_when: "'Tomcat started' not in start_tomcat.stdout"

  - name: create the SSH public key file
    copy: 
      content: "{{ vault['public_key'] }}"
      dest: "{{ home }}/.ssh/id_rsa.pub"
      mode: 0644

  - name: create the SSH private key file
    copy: 
      content: "{{ vault['private_key'] }}"
      dest: "{{ home }}/.ssh/id_rsa"
      mode: 0600

  - name: clone iTrust repo
    git:
      repo: ssh://git@github.ncsu.edu/zsthampi/iTrust-v23
      dest: "{{ home }}/development/iTrust-v23"
      accept_hostkey: yes
      force: yes
      update: yes

  - name: remove case sensitivity in mysql
    blockinfile:
      path: /etc/mysql/my.cnf
      block: |
        [mysqld]
        lower_case_table_names = 1
    register: mysql_case_sensitivity
    become: yes

  - name: check plugin value on mysql root user
    shell: >
      mysql -u root --execute "SELECT plugin from mysql.user WHERE user = 'root'"
    become: yes
    register: mysql_plugin
    changed_when: "'mysql_native_password' not in mysql_plugin.stdout"

  - name: update plugin value on mysql root user
    shell: >
      mysql -u root --execute "UPDATE mysql.user SET plugin = 'mysql_native_password' WHERE user = 'root'; FLUSH PRIVILEGES;"
    become: yes
    when: mysql_plugin.changed

  - name: restart mysql
    systemd:
      name: mysql.service
      state: restarted
    become: yes
    when: (mysql_case_sensitivity.changed or mysql_plugin.changed)

  - name: compile the iTrust project
    shell: mvn compile
    args:
      chdir: "{{ home }}/development/iTrust-v23/iTrust/"
    register: mvn_compile
    failed_when: "'BUILD SUCCESS' not in mvn_compile.stdout"

  - name: package the iTrust project
    shell: mvn package
    args:
      chdir: "{{ home }}/development/iTrust-v23/iTrust/"

  - name: check if WAR file is created for iTrust
    stat:
      path: "{{ home }}/development/iTrust-v23/iTrust/target/iTrust-23.0.0.war"
    register: war

  - name: copy iTrust WAR file to tomcat webapps folder
    copy:
      src: "{{ home }}/development/iTrust-v23/iTrust/target/iTrust-23.0.0.war"
      dest: "{{ home }}/development/apache-tomcat-9.0.0.M26/webapps/iTrust.war"
      remote_src: yes
    failed_when: war.stat.exists == False
    when: war.stat.exists == True

  - name: stop apache server
    command: nohup ./shutdown.sh
    args:
      chdir: "{{ home }}/development/apache-tomcat-9.0.0.M26/bin/"
    ignore_errors: yes
    register: stop_apache

  - name: start apache server
    command: nohup ./startup.sh
    args:
      chdir: "{{ home }}/development/apache-tomcat-9.0.0.M26/bin/"
    register: start_apache
    failed_when: "'Tomcat started' not in start_apache.stdout"

...